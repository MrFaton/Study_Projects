package net.mr_faton.OOP.App00_Constructor04;

/**
 * Created by root on 16.11.2014.
 */
class Parent {
    Parent(int x) {//7 - мы в конструкторе с интом
        super();//8 - вызвали констуктор предка, т.е. констукрор Object-а
        System.out.println("Parent (int x)");//9 - констуртор Object-а отработал и мы пожем выполнить эту строку
    }

    Parent(String s) {//5 - попали в констуктор предка со строкой
        this(0);//6 - нужно вызвать свой конструктор с интом
        System.out.println("Parent (String s)");//10 - мой констуктор с интом отработил и я могу выполнить эту строку
    }
}

class Child extends Parent {
    Child() {//3 - теперь мы сдесь
        super("");//4 - попадаем в конструктор предка со строкой
        System.out.println("Child ()");//11 - констуктор с строкой предка отработал, теперь я могу выполнить эту строку
    }

    Child(int g, int k) { //1 - попадаем в этот конструктор
        this(); //2 - тут мы вызываем свой конструктор без аргументов
        System.out.println("Child (int g)");//12 - мой констуктор без аргументов отработал, теперь я могу выполнить эту строку
    }
}

class Test {
    public static void main(String[] args) {
        new Child(0, 0); //для того чтобы создать этот объект:
    }
}
/*
Конструирование начинается с самого верхнего предка. Поэтому сначала будут печататься:(9, 10, 11, 12)
 */